{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","isOpened","goodsFromServer2","mutedGoods","startGoods","setState","reversedGoods","reverse","sortByABCGoods","sort","good1","good2","localeCompare","sortByGoodsLength","length","resetGoods","this","mutedgoods","className","type","onClick","forceUpdate","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPASMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJC,MAAe,CACbC,UAAU,EACVC,iBAAkBJ,EAClBK,WAAY,I,EAGdC,WAAa,WACX,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,UAAU,EACVE,WAAW,YAAKH,EAAME,uB,EAI1BI,cAAgB,WACd,EAAKD,UAAS,SAAAL,GACZA,EAAMG,WAAWI,c,EAIrBC,eAAiB,WACf,EAAKH,UAAS,SAAAL,GACZA,EAAMG,WAAWM,MAAK,SAACC,EAAOC,GAC5B,OAAOD,EAAME,cAAcD,U,EAKjCE,kBAAoB,WAClB,EAAKR,UAAS,SAAAL,GACZA,EAAMG,WAAWM,MAAK,SAACC,EAAOC,GAC5B,OAAQD,EAAMI,OAASH,EAAMG,c,EAKnCC,WAAa,WACX,EAAKV,UAAS,SAAAL,GAAK,MAAK,CACtBG,WAAW,YAAKH,EAAME,uB,4CAI1B,WAAU,IAAD,OACP,EAA6Cc,KAAKhB,MAA1CC,EAAR,EAAQA,SAAsBgB,EAA9B,EAAkBd,WAElB,OACE,sBAAKe,UAAU,MAAf,UACE,uCAEA,wBACEC,KAAK,SACLC,QAAS,WACP,EAAKhB,cAEPc,UAAWjB,EAAW,gBAAkB,GAL1C,mBAUA,wBACEkB,KAAK,SACLC,QAAS,WACP,EAAKd,gBACL,EAAKe,eAEPH,UAAYjB,EAA6B,GAAlB,gBANzB,qBAWA,wBACEkB,KAAK,SACLC,QAAS,WACP,EAAKZ,iBACL,EAAKa,eAEPH,UAAYjB,EAA6B,GAAlB,gBANzB,iCAWA,wBACEkB,KAAK,SACLC,QAAS,WACP,EAAKP,oBACL,EAAKQ,eAEPH,UAAYjB,EAA6B,GAAlB,gBANzB,4BAWA,wBACEkB,KAAK,SACLC,QAAS,WACP,EAAKL,aACL,EAAKM,eAEPH,UAAYjB,EAA6B,GAAlB,gBANzB,mBAWA,6BACGA,GAAYgB,EAAWK,KAAI,SAACC,GAC3B,OACE,6BACGA,GADMA,e,GA1GLC,IAAMC,WAqHT1B,ICxIf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.78b08458.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\ntype State = {\n  isOpened: boolean,\n  goodsFromServer2: string[],\n  mutedGoods: string[],\n};\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isOpened: false,\n    goodsFromServer2: goodsFromServer,\n    mutedGoods: [],\n  };\n\n  startGoods = () => {\n    this.setState(state => ({\n      isOpened: true,\n      mutedGoods: [...state.goodsFromServer2],\n    }));\n  };\n\n  reversedGoods = () => {\n    this.setState(state => {\n      state.mutedGoods.reverse();\n    });\n  };\n\n  sortByABCGoods = () => {\n    this.setState(state => {\n      state.mutedGoods.sort((good1, good2) => {\n        return good1.localeCompare(good2);\n      });\n    });\n  };\n\n  sortByGoodsLength = () => {\n    this.setState(state => {\n      state.mutedGoods.sort((good1, good2) => {\n        return (good1.length - good2.length);\n      });\n    });\n  };\n\n  resetGoods = () => {\n    this.setState(state => ({\n      mutedGoods: [...state.goodsFromServer2],\n    }));\n  };\n\n  render() {\n    const { isOpened, mutedGoods: mutedgoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.startGoods();\n          }}\n          className={isOpened ? 'button__start' : ''}\n        >\n          Start\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.reversedGoods();\n            this.forceUpdate();\n          }}\n          className={!isOpened ? 'button__start' : ''}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.sortByABCGoods();\n            this.forceUpdate();\n          }}\n          className={!isOpened ? 'button__start' : ''}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.sortByGoodsLength();\n            this.forceUpdate();\n          }}\n          className={!isOpened ? 'button__start' : ''}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.resetGoods();\n            this.forceUpdate();\n          }}\n          className={!isOpened ? 'button__start' : ''}\n        >\n          Reset\n        </button>\n\n        <ul>\n          {isOpened && mutedgoods.map((good) => {\n            return (\n              <li key={good}>\n                {good}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}